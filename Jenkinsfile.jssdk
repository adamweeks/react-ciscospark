#!groovy
ansiColor('xterm') {
  timestamps {
    timeout(60) {
      node('NODE_JS_BUILDER') {
        stage('checkout') {
          checkout scm

          sh 'git config user.email spark-js-sdk.gen@cisco.com'
          sh 'git config user.name Jenkins'

          sshagent(['6c8a75fb-5e5f-4803-9b6d-1933a3111a34']) {
            // return the exit code because we don't care about failures
            sh script: 'git remote add upstream git@github.com:adamweeks/react-ciscospark-1.git', returnStatus: true

            sh 'git fetch upstream'
          }

          sh 'git checkout upstream/spark-upgrade-script-test'
          sh 'git reset --hard && git clean -f'
        }

        stage('Install') {
          withCredentials([
            string(credentialsId: 'NPM_TOKEN', variable: 'NPM_TOKEN')
          ]) {
            sh 'echo \'//registry.npmjs.org/:_authToken=${NPM_TOKEN}\' > $HOME/.npmrc'
            sh '''#!/bin/bash -ex
            source ~/.nvm/nvm.sh
            nvm install 7
            nvm use v7
            npm install
            rm -f $HOME/.npmrc
            '''
          }
        }

        stage('Upgrade') {
          echo "Upgrading @ciscospark packages"
          sh '''#!/bin/bash -ex
          source ~/.nvm/nvm.sh
          nvm use v7
          npm run upgradespark
          '''
        }

        stage('Branching') {
          echo "Creating Branch"
          def version
          sh '''#!/bin/bash -ex
          source ~/.nvm/nvm.sh
          nvm use v7
          version=$(node ./scripts/utils/jssdkversion.js)
          echo $version > .version
          git add package.json
          git commit -m "chore: update @ciscospark packages to ${version}"
          '''
          version = readFile '.version'
          sshagent(['6c8a75fb-5e5f-4803-9b6d-1933a3111a34']) {
            sh "echo git push upstream HEAD:js-sdk/${version}"
          }
          archiveArtifacts artifacts: 'package.json'
        }
      }
    }
  }
}
