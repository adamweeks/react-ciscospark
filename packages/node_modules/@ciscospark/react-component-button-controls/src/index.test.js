/* eslint-disable max-nested-callbacks */
import React from 'react';
import renderer from 'react-test-renderer';

import ButtonControls from '.';

describe(`ButtonControls component`, () => {
  let buttonProps;
  beforeEach(() => {
    buttonProps = {
      buttons: [
        {
          label: `Message`
        },
        {
          label: `Call`
        }
      ]
    };
  });

  it(`renders properly with labels`, () => {
    buttonProps.showLabels = true;
    const component = renderer.create(<ButtonControls {...buttonProps} />);
    expect(component).toMatchSnapshot();
  });

  it(`renders properly without labels`, () => {
    buttonProps.showLabels = false;
    const component = renderer.create(<ButtonControls {...buttonProps} />);
    expect(component).toMatchSnapshot();
  });

  describe(`when it has accessibility labels`, () => {
    beforeEach(() => {
      buttonProps.buttons = buttonProps.buttons.map((button) => {
        button.accessibilityLabel = `accessibilityLabel`;
        return button;
      });
    });

    it(`renders properly with labels`, () => {
      buttonProps.showLabels = true;
      const component = renderer.create(<ButtonControls {...buttonProps} />);
      expect(component).toMatchSnapshot();
    });

    it(`renders properly without labels`, () => {
      buttonProps.showLabels = false;
      const component = renderer.create(<ButtonControls {...buttonProps} />);
      expect(component).toMatchSnapshot();
    });
  });

});
